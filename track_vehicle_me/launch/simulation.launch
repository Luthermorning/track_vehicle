<launch>

    <arg name="paused" default="true" />
    <arg name="use_sim_time" default="true" />
    <arg name="gui" default="true" />
    <arg name="headless" default="false" />
    <arg name="debug" default="false" />


    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <!-- <arg name="world_name" value="$(find track_vehicle_me)/world/mountain.world" /> -->
        <!-- <arg name="world_name" value="$(find gazebo_terrain_tutorial)/worlds/terrain_1.world"/> -->
        <arg name="world_name" value="$(find gazebo_terrain_tutorial)/worlds/rough.world"/>
        <!-- <arg name="world_name" value="$(find track_vehicle_me)/world/test.world" /> -->
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)" />
        <arg name="use_sim_time" value="$(arg use_sim_time)" />
        <arg name="headless" value="$(arg headless)" />
    </include>

    <!-- for crawlers-->
    <node name="cmd_relay_for_left_crawler"        pkg="topic_tools" type="relay" args="/cmd_vel /track_vehicle/left_crawler_sprocket_velocity_controller/command"        output="screen" />
    <node name="cmd_relay_for_right_crawler"       pkg="topic_tools" type="relay" args="/cmd_vel /track_vehicle/right_crawler_sprocket_velocity_controller/command"       output="screen" />
  

    <group ns="track_vehicle">
        <!-- Load the URDF into the ROS Parameter Server -->
        <param name="robot_description" command="$(find xacro)/xacro $(find track_vehicle_me)/xacro/track_vehicle_gazebo.urdf.xacro" />
        <node pkg="gazebo_ros" type="spawn_model" name="model" args="-urdf -model my -param robot_description" />

        <rosparam>
            joint_state_controller:
                type: joint_state_controller/JointStateController
                publish_rate: 10
            left_crawler_sprocket_velocity_controller:
                type: velocity_controllers/JointVelocityController
                joint: left_crawler_sprocket_axle
                pid: {p: 1000.0, i: 100.0, d: 10.0}
            right_crawler_sprocket_velocity_controller:
                type: velocity_controllers/JointVelocityController
                joint: right_crawler_sprocket_axle
                pid: {p: 1000.0, i: 100.0, d: 10.0}
        </rosparam>

        <!-- load and start the controllers -->
        <node name="controller_starter"
              pkg="controller_manager" 
              type="controller_manager" 
              args="spawn joint_state_controller
                        left_crawler_sprocket_velocity_controller 
                        right_crawler_sprocket_velocity_controller"
              output="screen"
        />


        <!-- convert joint states to TF transforms for rviz, etc -->
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
            <param name="tf_prefix" value="track_vehicle" />
        </node>

        <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
            <remap from="/joint_states" to="/track_vehicle_me/joint_states" />
        </node>  -->

        <!-- <node pkg="track_vehicle_me" type="turn" name="turn" output="screen"/> -->

        <node name="rviz" pkg="rviz" type="rviz" args="-d $(find track_vehicle_me)/config/show_robot.rviz" />


    </group>

</launch>
